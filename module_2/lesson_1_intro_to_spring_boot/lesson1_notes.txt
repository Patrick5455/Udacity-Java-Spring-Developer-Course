When deciding if the topics you will learn in this course are a good fit for a project you're working on, consider your environment, project features, and testing goals.

If you feel comfortable with Java and your environment supports it, it's a great language for any size project. But if you need ultra-high performance, a bare-metal language like C, C++, Rust, or Go might be a better choice.

If your project aims to connect simultaneous users on different clients, you probably need to build a server, which Spring Boot can help with. If you're making a website with dynamic data, Spring Boot provides Thymeleaf as an HTML template engine. If you store and manage data in a database, Spring Boot supports a plethora of Java libraries that provide database access, including MyBatis, which we cover in this course. As long as you need a server, Spring Boot is probably the right choice.

If you need to test your application by automating a web browser, Selenium is the industry standard. There are libraries for many languages to use Selenium, and Java is one of them. Selenium also has integrations with Spring Boot that make testing server behavior a breeze.


Networked computing has existed for nearly sixty years. First, specific programs were designed to speak to each other, but over the years several standards for different data protocols were established. In this era, the server/client dichotomy reigned supreme, with specialized server and client programs developed for individual network tasks like file sharing and email exchange. This changed with the development of the world wide web, HTTP, and HTML. As web sites became more complex, the web servers took on more and more roles as the mediator between the user's browser and other relevant services. This amalgamation of web server responsibilities coincided with the release and popularity of Java, which was soon accompanied by official web servlet and application container specifications which solved common problems when constructing complex, feature-rich web servers.

With the rise of the web, software developers began to meet and share ideas in open source communities online. These groups developed useful tools and utilities, including Spring, which aimed to build on Java's rich server architecture and provide a boilerplate-free enterprise development experience. It has grown into an industry standard, and an umbrella project that supports a vast array of powerful utilities and frameworks.


For the final project of the course, you're going to put all of your skills to the test to build a fully-functional web app with Spring Boot. You'll be developing a personal storage app that allows users to store files, personal notes, and website credentials securely for a new company in the cloud storage business, SuperDuperDrive. You'll have some help, in the form of a database schema and website prototype HTML files provided by your tech lead at the company. You'll be responsible for developing the registration, login, and data storage features of the application, as well as writing tests to verify the app is feature-complete. 
